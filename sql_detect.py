# coding: utf8
import re
import random
import os
import sys
import httplib2
import urlAudit
import urllib
import xml
from collections import OrderedDict
import xml.dom.minidom
from difflib import SequenceMatcher
import requests

class SQL_detect():
    def __init__(self):
        self.url = 'http://www.baidu.com/'
        self.mark_flag = False
        self.result_list = []
        self.payload_dict = OrderedDict()

    """
    def check_dbms_error(self):
        out_self = self

        class ErrorDbmsHandler(xml.sax.ContentHandler):
            def __init__(self):
                self.dbms = ""

            # 元素开始事件处理
            def startElement(self, tag, attr):
                self.CurrentData = tag
                if tag == "dbms":
                    dbms = attr["value"]
                    self.dbms = dbms

                if tag == "error":
                    regexp = attr["regexp"]
                    if re.search(regexp, out_self.html):
                        if out_self.dbms == '':
                            out_self.dbms = self.dbms
                            out_self.result_list.append(
                                {'type': 'error', 'dbms': self.dbms, 'payload': out_self.payload})
                            print(
                                        "##############################################################dbms:" + self.dbms + "##############################################################")

        # 创建一个 XMLReader
        parser = xml.sax.make_parser()
        # turn off namepsaces
        parser.setFeature(xml.sax.handler.feature_namespaces, 0)

        # 重写 ContextHandler
        handler = ErrorDbmsHandler()
        parser.setContentHandler(handler)

        parser.parse('/Data/sql_error')
        """

    def dbms_check(self):
        DOMTree = xml.dom.minidom.parse('/Data/sql_error')
        collection = DOMTree.documentElement

        dbms_collection = collection.getElementsByTagName("dbms")
        for dbms_node in dbms_collection:
            dbms = str(dbms_node.getAttribute("value"))
            errors = dbms_node.getElementsByTagName('error')
            for error in errors:
                error = error.getAttribute("value")
                if (re.search(error, content)):
                    return d
